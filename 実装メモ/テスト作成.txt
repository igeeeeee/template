//基本サンプル 4<=N<=10,1<=A<=20
/*
    random_device seed_gen;
    mt19937_64 rnd(seed_gen());
    
    uniform_int_distribution<int> dist_N(4, 10), dist_A(1, 20);
    int N = dist_N(rnd);
    vector<int> A(N);
    for(int i=0; i<N; i++) A[i] = dist_A(rnd);

    cout << N << endl;
    for(int i=0; i<N; i++) cout << A[i] << " \n"[i==N-1];
*/







//N頂点木のテストケース
pair<ll,vector<pair<ll,ll>>> make_test(){
    random_device seed_gen;
    mt19937_64 rnd(seed_gen());
    
    uniform_int_distribution<ll> dist_N(1, 20);//[1,20]の整数
    ll N = dist_N(rnd);

    uniform_int_distribution<ll> dist_pair(1,N);//

    vector<pair<ll,ll>> A(N-1);
    ll siz = 0;
    UnionFind uf(N);
    while(siz < N-1){
      ll a = dist_pair(rnd);
      ll b = dist_pair(rnd);
      if(uf.same(a-1,b-1))continue;
      uf.merge(a-1,b-1);
      A[siz] = {a,b};
      siz++;
    }

    return {N,A};
}




//参照渡しで値を作成して渡す
void Maketest(ll &n){
//配列を渡すときは最初に.clear()をしておく
  random_device seed_gen;
  mt19937_64 rnd(seed_gen());
  
  uniform_int_distribution<ll> da(1, 10);
  uniform_int_distribution<ll> db(0, lpow(10,9));
  n = da(rnd);


  uniform_int_distribution<ll> dc(0, 1);
  uniform_int_distribution<ll> dd(0, 1);
}

void myans(){
  //答えの型注意
}

void correct(){
  //答えの型注意
}

void test(){

}

void nomal(){

}