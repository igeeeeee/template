vector<pll> convex_hull(vpll p) { // 凸包
  auto cp_x =[](pll u,pll v){
    if(u.first != v.first){
      return u.first < v.first;
    }else{
      return u.second < v.second;
    }
  };
  sort(all(p), cp_x);
  p.erase(unique(all(p)), end(p));
  int n = sz(p), k = 0;
  if (n == 1) return p;

  auto clc_vector = [](pll u,pll v) -> pll {
    return pll{u.first-v.first,u.second-v.second};
  };

  auto det = [](pll u,pll v) -> ll {
    return u.first*v.second - u.second*v.first;
  };  

  vpll ch(2 * n);
  // 一直線上で高々2点 : det() <= 0
  // 一直線上で複数点(180度の角を許す) : det() < 0
  for (int i = 0; i < n; ch[k++] = p[i++]) {
      while (k >= 2 && det(clc_vector(ch[k - 1] ,ch[k - 2]), clc_vector(p[i],ch[k - 1])) <= 0)
          k--;
  }
  for (int i = n - 2, t = k + 1; i >= 0; ch[k++] = p[i--]) {
      while (k >= t && det(clc_vector(ch[k - 1],ch[k - 2]),clc_vector(p[i],ch[k - 1])) <= 0)
          k--;
  }
  ch.resize(k - 1);
  return ch;
}