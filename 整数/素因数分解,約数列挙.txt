//素因数分解
map<ll,ll> enumpr(ll n) {
	map<ll,ll> V;
	for(ll i=2;i*i<=n;i++) {
    while(n%i==0){
      V[i]++;
      n/=i;
    } 
  }
	if(n>1) V[n]++;
	return V;
}

//約数列挙
vector<ll> divisor(ll n){
  vector<ll> ret;
  for(ll i = 1;i * i <= n;i++){
    if(n % i == 0){
      ret.push_back(i);
      if(i * i != n)ret.push_back(n/i);
    }
  }
  //昇順
  sort(all(ret));
  return ret;
}



//前処理、約数列挙PまでO(PlogP) //昇順でない
 ll P = lpow(10,6);
  vector<vector<ll>> primeFact(P+1);
  vector<ll> Deleted(P+1,0);
  Deleted[1] = 1;
  repsn(i,2,P){
    if(Deleted[i] != 0) continue;
    for(int j = i;j <= P;j += i){
      if(Deleted[j] !=0)continue;
      Deleted[j] = i;//iで初めに割られたということ
    }
  }
  repsn(i,1,P){
    primeFact[i].push_back(i);
    ll now = i;
    while(Deleted[now] != now){
      now /= Deleted[now];
      primeFact[i].push_back(now);
    }
    if(i != 1){
      primeFact[i].push_back(1);
    }
  }